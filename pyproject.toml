[build-system]
requires = [ "setuptools>=61", "setuptools-scm>=8" ]

[project]
name = "earthkit-data"
description = "A format-agnostic Python interface for geospatial data"
readme = "README.md"
license = { text = "Apache License Version 2.0" }
authors = [
  { name = "European Centre for Medium-Range Weather Forecasts (ECMWF)", email = "software.support@ecmwf.int" },
]
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = [ "version" ]
dependencies = [
  "array-api-compat",
  "cfgrib>=0.9.10.1",
  "dask",
  "deprecation",
  "earthkit-meteo>=0.0.1",
  "eccodes>=1.7",
  "entrypoints",
  "filelock",
  "jinja2",
  "jsonschema",
  "lru-dict",
  "markdown",
  "multiurl>=0.3.3",
  "netcdf4",
  "pandas",
  "pdbufr>=0.11",
  "pyyaml",
  "tqdm>=4.63",
  "xarray>=0.19",
]
optional-dependencies.all = [
  "cartopy",
  "cdsapi>=0.7.2",
  "covjsonkit>=0.1.1",
  "earthkit-geo>=0.2",
  "ecmwf-api-client>=1.6.1",
  "ecmwf-opendata>=0.3.3",
  "geopandas",
  "hda>=2.22",
  "polytope-client>=0.7.4",
  "pyfdb>=0.1",
  "pyodc",
]
optional-dependencies.cds = [ "cdsapi>=0.7.2" ]
optional-dependencies.ci = [ "numpy" ]
optional-dependencies.covjsonkit = [ "covjsonkit>=0.1.1" ]
optional-dependencies.dev = [
  "cartopy",
  "cdsapi>=0.7.2",
  "covjsonkit>=0.1.1",
  "earthkit-data-demo-source",
  "earthkit-geo>=0.2",
  "ecmwf-api-client>=1.6.1",
  "ecmwf-opendata>=0.3.3",
  "geopandas",
  "hda>=2.22",
  "nbconvert",
  "nbformat",
  "polytope-client>=0.7.4",
  "pyfdb>=0.1",
  "pyodc",
  "pytest",
  "pytest-cov",
  "pytest-forked",
  "pytest-timeout",
]
optional-dependencies.docs = [
  "nbsphinx",
  "pygments>=2.6.1",
  "sphinx>=7.3.7",
  "sphinx-autoapi",
  "sphinx-copybutton",
  "sphinx-issues",
  "sphinx-rtd-theme",
  "sphinx-tabs",
]
optional-dependencies.ecmwf-opendata = [ "ecmwf-opendata>=0.3.3" ]
optional-dependencies.fdb = [ "pyfdb>=0.1" ]
optional-dependencies.geo = [ "earthkit-geo>=0.2" ]
optional-dependencies.geopandas = [ "geopandas" ]
optional-dependencies.geotiff = [ "pyproj", "rasterio", "rioxarray" ]
optional-dependencies.mars = [ "ecmwf-api-client>=1.6.1" ]
optional-dependencies.odb = [ "pyodc" ]
optional-dependencies.polytope = [ "polytope-client>=0.7.4" ]
optional-dependencies.projection = [ "cartopy" ]
optional-dependencies.s3 = [ "aws-requests-auth", "botocore" ]
optional-dependencies.test = [
  "earthkit-data-demo-source",
  "nbconvert",
  "nbformat",
  "pytest",
  "pytest-cov",
  "pytest-forked",
  "pytest-timeout",
]
optional-dependencies.wekeo = [ "hda>=2.22" ]
urls.Documentation = "https://earthkit-data.readthedocs.io/"
urls.Homepage = "https://github.com/ecmwf/earthkit-data/"
urls.Issues = "https://github.com/ecmwf/earthkit-data.issues"
urls.Repository = "https://github.com/ecmwf/earthkit-data/"

entry-points."xarray.backends".earthkit = "earthkit.data.utils.xarray.engine:EarthkitBackendEntrypoint"

[tool.setuptools.packages.find]
include = [ "earthkit.data" ]
where = [ "src/" ]

[tool.setuptools_scm]
version_file = "src/earthkit/data/_version.py"

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = "true"

[tool.pydocstyle]
add_ignore = [ "D1", "D200", "D205", "D400", "D401" ]
convention = "numpy"
